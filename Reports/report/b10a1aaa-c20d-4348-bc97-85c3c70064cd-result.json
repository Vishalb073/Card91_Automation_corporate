{"name": "test_failed_file_records_is_displayed", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id='13']/div[1]/div[2]/text()\"}\n  (Session info: chrome=124.0.6367.118); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x630a14e33df3 <unknown>\n#1 0x630a14b224e7 <unknown>\n#2 0x630a14b6d35d <unknown>\n#3 0x630a14b6d411 <unknown>\n#4 0x630a14bb0774 <unknown>\n#5 0x630a14b8f47d <unknown>\n#6 0x630a14badc29 <unknown>\n#7 0x630a14b8f1f3 <unknown>\n#8 0x630a14b6028a <unknown>\n#9 0x630a14b60c5e <unknown>\n#10 0x630a14df811b <unknown>\n#11 0x630a14dfc06b <unknown>\n#12 0x630a14de4231 <unknown>\n#13 0x630a14dfcbd2 <unknown>\n#14 0x630a14dc90ef <unknown>\n#15 0x630a14e22f48 <unknown>\n#16 0x630a14e23120 <unknown>\n#17 0x630a14e32f44 <unknown>\n#18 0x7eb3ce894ac3 <unknown>", "trace": "self = <testcases.test_bulkupload.Test_Bulkupload object at 0x734b555a59f0>, login_setup1 = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4d591c3a356ddc80518efa18d1703bb1\")>\n\n    def test_failed_file_records_is_displayed(self, login_setup1):\n        self.logger.info(\"============Validating failed records============\")\n        file_path = \"/home/vishal/Downloads/Corporate Customers Bulk Upload.csv\"\n        self.driver = login_setup1\n        self.bu = bulk_upload(self.driver)\n    \n        self.bu.bulk_btn()\n        time.sleep(5)\n        self.bu.customers()\n        self.bu.customers_file(file_path)\n        time.sleep(2)\n        self.bu.upload_()\n        time.sleep(2)\n>       message = self.bu.get_message()\n\ntestcases/test_bulkupload.py:174: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageobjects/bulkupload.py:135: in get_message\n    mess = self.driver.find_element(By.XPATH , self.message_read)\n.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x734b555a5f00>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x630a14e23120 \\\\u003Cunknown>\\\\n#17 0x630a14e32f44 \\\\u003Cunknown>\\\\n#18 0x7eb3ce894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id='13']/div[1]/div[2]/text()\"}\nE         (Session info: chrome=124.0.6367.118); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x630a14e33df3 <unknown>\nE       #1 0x630a14b224e7 <unknown>\nE       #2 0x630a14b6d35d <unknown>\nE       #3 0x630a14b6d411 <unknown>\nE       #4 0x630a14bb0774 <unknown>\nE       #5 0x630a14b8f47d <unknown>\nE       #6 0x630a14badc29 <unknown>\nE       #7 0x630a14b8f1f3 <unknown>\nE       #8 0x630a14b6028a <unknown>\nE       #9 0x630a14b60c5e <unknown>\nE       #10 0x630a14df811b <unknown>\nE       #11 0x630a14dfc06b <unknown>\nE       #12 0x630a14de4231 <unknown>\nE       #13 0x630a14dfcbd2 <unknown>\nE       #14 0x630a14dc90ef <unknown>\nE       #15 0x630a14e22f48 <unknown>\nE       #16 0x630a14e23120 <unknown>\nE       #17 0x630a14e32f44 <unknown>\nE       #18 0x7eb3ce894ac3 <unknown>\n\n.venv/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException"}, "attachments": [{"name": "log", "source": "467984ae-6d3b-422d-8f19-94c2f9194263-attachment.txt", "type": "text/plain"}], "start": 1715249108111, "stop": 1715249129900, "uuid": "e55a8aa2-401f-4ce2-afb9-e273c7eb1d78", "historyId": "574b3fe5f503d90d033070386bd1e009", "testCaseId": "574b3fe5f503d90d033070386bd1e009", "fullName": "testcases.test_bulkupload.Test_Bulkupload#test_failed_file_records_is_displayed", "labels": [{"name": "severity", "value": "normal"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_bulkupload"}, {"name": "subSuite", "value": "Test_Bulkupload"}, {"name": "host", "value": "vishal-IdeaPad-Gaming-3-15IMH05"}, {"name": "thread", "value": "19566-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_bulkupload"}]}